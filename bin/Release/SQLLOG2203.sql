DELIMITER ***

CREATE  TABLE IF NOT EXISTS SQLLOG (
  ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT ,
  BATCHID BIGINT UNSIGNED NOT NULL,
  OBJECTTYPE VARCHAR(60) NOT NULL,
  OBJECTNAME VARCHAR(60) NOT NULL,
  COMMANDTYPE VARCHAR(60) NOT NULL,
  COMMANDSTRING VARCHAR(8000) NULL,
  DBCODE CHAR(15) NOT NULL,
  CREATED_USER CHAR(15) NULL,
  CREATED_DATE DATETIME,
  PRIMARY KEY (ID) );
***
CREATE TABLE IF NOT EXISTS `replicationlog` (
  `DBCODE` char(15) NOT NULL,
  `ID` bigint(20) unsigned NOT NULL,
  `BATCHID` bigint(20) unsigned NOT NULL,
  `OBJECTTYPE` varchar(60) NOT NULL,
  `OBJECTNAME` varchar(60) NOT NULL,
  `COMMANDTYPE` varchar(60) NOT NULL,
  `COMMANDSTRING` varchar(8000) DEFAULT NULL,
  `COMMANDSTATUS` enum('Pending','Success','Failed') DEFAULT 'Pending',
  `UPDATESTATUS` enum('Pending','Success','Failed') DEFAULT 'Pending',
  `REMARKS1` varchar(800) DEFAULT NULL,
  `REMARKS2` varchar(800) DEFAULT NULL,
  `SKIP` enum('Yes','No') DEFAULT 'No',
  PRIMARY KEY (`DBCODE`,`ID`)
)
***
DROP FUNCTION IF EXISTS DBUSER;
CREATE DEFINER=root FUNCTION DBUSER() RETURNS CHAR(15) 
BEGIN
    RETURN left(user(),LOCATE('@', user()) -1);
END
***
DROP TRIGGER IF EXISTS TR_SQLLOG_INSERT;
CREATE TRIGGER TR_SQLLOG_INSERT BEFORE INSERT ON SQLLOG
FOR EACH ROW 
BEGIN
  SET NEW.CREATED_USER = DBUSER();
  SET NEW.CREATED_DATE = NOW();
END;
***
CREATE  TABLE IF NOT EXISTS DBINFO (
  CODE CHAR(15),
  NEXT_BATCHID BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (CODE) );
***
DROP FUNCTION IF EXISTS NEXTBATCHID;
CREATE DEFINER=root FUNCTION NEXTBATCHID(V_CODE CHAR(15)) RETURNS BIGINT UNSIGNED
BEGIN
DECLARE V_NEXTBATCHID BIGINT UNSIGNED;
DECLARE V_CNT INT;

    SELECT NEXT_BATCHID 
		INTO V_NEXTBATCHID
		FROM DBINFO
		WHERE CODE = V_CODE;

	IF V_NEXTBATCHID IS NULL THEN
		SET V_NEXTBATCHID = 1;
		SELECT COUNT(*)
		INTO V_CNT 
		FROM DBINFO WHERE CODE = V_CODE;
	
		IF V_CNT = 0 THEN
			INSERT INTO DBINFO
				(CODE,NEXT_BATCHID)
			VALUES
				(V_CODE,V_NEXTBATCHID);
		END IF;
	END IF;
	UPDATE DBINFO SET NEXT_BATCHID = NEXT_BATCHID + 1
			WHERE CODE = V_CODE;
	
    RETURN V_NEXTBATCHID;
END
***
CREATE TABLE IF NOT EXISTS `ACTIVITYLOG` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `ACTIVITYTYPE` varchar(60) NOT NULL,
  `ACTIVITY` varchar(800) NOT NULL,
  `RESULT` varchar(800) NOT NULL,
  `CREATED_USER` char(15) DEFAULT NULL,
  `CREATED_DATE` datetime DEFAULT NULL,
  PRIMARY KEY (`ID`)
) 
***
DROP TRIGGER IF EXISTS `TR_ACTIVITYLOG_INSERT`;
CREATE DEFINER=root TRIGGER `TR_ACTIVITYLOG_INSERT` BEFORE INSERT ON `ACTIVITYLOG`
FOR EACH ROW
BEGIN
  SET NEW.CREATED_USER = DBUSER();
  SET NEW.CREATED_DATE = NOW();
END
***
CREATE TABLE IF NOT EXISTS REPLICATIONINFO (
  CODE CHAR(15) NOT NULL ,
  FIRSTID BIGINT(20) UNSIGNED NOT NULL DEFAULT 0,
  LASTCONNECTION DATETIME,
  MINIMUMTIMEGAP INT(10) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`CODE`)
);

